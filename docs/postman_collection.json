{
  "info": {
    "name": "Course Management Platform API - Complete",
    "description": "Complete API collection for testing the Course Management Platform backend service with all implemented endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Save token from login/register responses",
          "if (pm.response.json().tokens) {",
          "    pm.environment.set('access_token', pm.response.json().tokens.accessToken);",
          "    pm.environment.set('refresh_token', pm.response.json().tokens.refreshToken);",
          "}",
          "",
          "// Basic status check",
          "pm.test('Response status is valid', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "// Response time check",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(3000);",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api"
    }
  ],
  "item": [
    {
      "name": "System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/../health",
              "host": ["{{baseUrl}}"],
              "path": ["..", "health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Health check passes', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('OK');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "API Root",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}",
              "host": ["{{baseUrl}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register Manager",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"manager@university.edu\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Manager\",\n  \"role\": \"manager\",\n  \"employeeId\": \"MGR001\",\n  \"department\": \"Computer Science\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Register Facilitator",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@university.edu\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"role\": \"facilitator\",\n  \"employeeId\": \"EMP001\",\n  \"department\": \"Computer Science\",\n  \"specialization\": \"Software Development\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Register Student",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student@university.edu\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"Alice\",\n  \"lastName\": \"Student\",\n  \"role\": \"student\",\n  \"studentId\": \"STU001\",\n  \"cohortId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login Manager",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"manager@university.edu\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Facilitator",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@university.edu\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"SecurePass123!\",\n  \"newPassword\": \"NewSecurePass456!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get All Users with Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users?search=john&role=facilitator",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "search",
                  "value": "john"
                },
                {
                  "key": "role",
                  "value": "facilitator"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            }
          }
        },
        {
          "name": "Update User (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated First\",\n  \"lastName\": \"Updated Last\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            }
          }
        },
        {
          "name": "Deactivate User",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/1/deactivate",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1", "deactivate"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            }
          }
        },
        {
          "name": "Get All Facilitators",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/facilitators",
              "host": ["{{baseUrl}}"],
              "path": ["users", "facilitators"]
            }
          }
        },
        {
          "name": "Get All Students",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/students",
              "host": ["{{baseUrl}}"],
              "path": ["users", "students"]
            }
          }
        },
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/stats",
              "host": ["{{baseUrl}}"],
              "path": ["users", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "Course Management",
      "item": [
        {
          "name": "Get All Modules",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/modules",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "modules"]
            }
          }
        },
        {
          "name": "Create Module",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"CS101\",\n  \"name\": \"Introduction to Computer Science\",\n  \"description\": \"Basic concepts of computer science\",\n  \"credits\": 3,\n  \"level\": \"100\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/modules",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "modules"]
            }
          }
        },
        {
          "name": "Create Additional Modules",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"CS201\",\n  \"name\": \"Data Structures and Algorithms\",\n  \"description\": \"Study of data organization and algorithmic thinking\",\n  \"credits\": 4,\n  \"level\": \"200\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/modules",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "modules"]
            }
          }
        },
        {
          "name": "Get All Course Offerings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["courses"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Course Offerings with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses?trimester=1&status=active&facilitatorId=1",
              "host": ["{{baseUrl}}"],
              "path": ["courses"],
              "query": [
                {
                  "key": "trimester",
                  "value": "1"
                },
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "facilitatorId",
                  "value": "1"
                }
              ]
            }
          }
        },
        {
          "name": "Create Course Offering",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"moduleId\": 1,\n  \"classId\": 1,\n  \"cohortId\": 1,\n  \"facilitatorId\": 1,\n  \"modeId\": 1,\n  \"trimester\": 1,\n  \"intakePeriod\": \"HT1\",\n  \"startDate\": \"2025-09-01\",\n  \"endDate\": \"2025-12-15\",\n  \"maxStudents\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses",
              "host": ["{{baseUrl}}"],
              "path": ["courses"]
            }
          }
        },
        {
          "name": "Get Course Offering by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/1",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "1"]
            }
          }
        },
        {
          "name": "Update Course Offering",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"active\",\n  \"maxStudents\": 35\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/1",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "1"]
            }
          }
        },
        {
          "name": "Delete Course Offering",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/1",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "1"]
            }
          }
        },
        {
          "name": "Assign Facilitator",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"facilitatorId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/1/assign-facilitator",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "1", "assign-facilitator"]
            }
          }
        },
        {
          "name": "Get My Assigned Courses (Facilitator)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/my-courses",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "my-courses"]
            }
          }
        }
      ]
    },
    {
      "name": "Activity Tracking",
      "item": [
        {
          "name": "Get All Activity Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["activities"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Activity Logs with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities?weekNumber=1&facilitatorId=1&status=complete",
              "host": ["{{baseUrl}}"],
              "path": ["activities"],
              "query": [
                {
                  "key": "weekNumber",
                  "value": "1"
                },
                {
                  "key": "facilitatorId",
                  "value": "1"
                },
                {
                  "key": "status",
                  "value": "complete"
                }
              ]
            }
          }
        },
        {
          "name": "Create Activity Log",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"allocationId\": 1,\n  \"weekNumber\": 1,\n  \"attendance\": [true, true, false, true, true],\n  \"formativeOneGrading\": \"Done\",\n  \"formativeTwoGrading\": \"Pending\",\n  \"summativeGrading\": \"Not Started\",\n  \"courseModeration\": \"Done\",\n  \"intranetSync\": \"Done\",\n  \"gradeBookStatus\": \"Pending\",\n  \"notes\": \"Student 3 was sick\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/activities",
              "host": ["{{baseUrl}}"],
              "path": ["activities"]
            }
          }
        },
        {
          "name": "Get Activity Log by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities/1",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "1"]
            }
          }
        },
        {
          "name": "Update Activity Log",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"formativeTwoGrading\": \"Done\",\n  \"summativeGrading\": \"Done\",\n  \"gradeBookStatus\": \"Done\",\n  \"notes\": \"All tasks completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/activities/1",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "1"]
            }
          }
        },
        {
          "name": "Delete Activity Log (Manager)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities/1",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "1"]
            }
          }
        },
        {
          "name": "Get My Activity Logs (Facilitator)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities/my-logs",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "my-logs"]
            }
          }
        },
        {
          "name": "Get My Activity Logs with Filter",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities/my-logs?weekNumber=1&allocationId=1",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "my-logs"],
              "query": [
                {
                  "key": "weekNumber",
                  "value": "1"
                },
                {
                  "key": "allocationId",
                  "value": "1"
                }
              ]
            }
          }
        },
        {
          "name": "Get Weekly Summary (Manager)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities/summary?weekNumber=1",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "summary"],
              "query": [
                {
                  "key": "weekNumber",
                  "value": "1"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Test Data Setup",
      "description": "Requests to create test data needed for course offerings",
      "item": [
        {
          "name": "Create Test Class",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"2025S\",\n  \"year\": 2025,\n  \"section\": \"S\",\n  \"description\": \"Spring 2025\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/classes",
              "host": ["{{baseUrl}}"],
              "path": ["classes"]
            }
          }
        },
        {
          "name": "Create Test Cohort",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Computer Science 2025\",\n  \"code\": \"CS2025\",\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2028-12-31\",\n  \"program\": \"Computer Science\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/cohorts",
              "host": ["{{baseUrl}}"],
              "path": ["cohorts"]
            }
          }
        },
        {
          "name": "Create Test Mode",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Online\",\n  \"description\": \"Online delivery\",\n  \"requiresPhysicalPresence\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/modes",
              "host": ["{{baseUrl}}"],
              "path": ["modes"]
            }
          }
        },
        {
          "name": "Create In-Person Mode",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"In-person\",\n  \"description\": \"Traditional classroom delivery\",\n  \"requiresPhysicalPresence\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/modes",
              "host": ["{{baseUrl}}"],
              "path": ["modes"]
            }
          }
        },
        {
          "name": "Seed Database",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/seed",
              "host": ["{{baseUrl}}"],
              "path": ["seed"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "description": "Requests to test error handling and validation",
      "item": [
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"wrong@email.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid login returns 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Invalid Module Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"\",\n  \"name\": \"Test Module\",\n  \"credits\": -1,\n  \"level\": \"invalid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/courses/modules",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "modules"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid data returns 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Unauthorized Access (No Token)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/modules",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "modules"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('No token returns 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Forbidden Access (Wrong Role)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Wrong role returns 403', function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Not Found Resource",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/courses/99999",
              "host": ["{{baseUrl}}"],
              "path": ["courses", "99999"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Non-existent resource returns 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Monitoring & Health",
      "description": "System monitoring and health check endpoints",
      "item": [
        {
          "name": "Redis Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/monitoring/redis",
              "host": ["{{baseUrl}}"],
              "path": ["monitoring", "redis"]
            }
          }
        },
        {
          "name": "MySQL Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/monitoring/mysql",
              "host": ["{{baseUrl}}"],
              "path": ["monitoring", "mysql"]
            }
          }
        },
        {
          "name": "Overall System Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/monitoring/status",
              "host": ["{{baseUrl}}"],
              "path": ["monitoring", "status"]
            }
          }
        },
        {
          "name": "Monitoring Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/../monitoring",
              "host": ["{{baseUrl}}"],
              "path": ["..", "monitoring"]
            }
          }
        }
      ]
    },
    {
      "name": "Advanced Workflows",
      "description": "Complex testing workflows that combine multiple operations",
      "item": [
        {
          "name": "Complete Course Setup Workflow",
          "item": [
            {
              "name": "1. Login as Manager",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"manager@university.edu\",\n  \"password\": \"SecurePass123!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                }
              }
            },
            {
              "name": "2. Create Module",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"code\": \"WF101\",\n  \"name\": \"Workflow Test Module\",\n  \"description\": \"Test module for workflow\",\n  \"credits\": 3,\n  \"level\": \"100\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/courses/modules",
                  "host": ["{{baseUrl}}"],
                  "path": ["courses", "modules"]
                }
              }
            },
            {
              "name": "3. Create Course Offering",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"moduleId\": \"{{module_id}}\",\n  \"classId\": 1,\n  \"cohortId\": 1,\n  \"facilitatorId\": 1,\n  \"modeId\": 1,\n  \"trimester\": 1,\n  \"intakePeriod\": \"HT1\",\n  \"startDate\": \"2025-09-01\",\n  \"endDate\": \"2025-12-15\",\n  \"maxStudents\": 30\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/courses",
                  "host": ["{{baseUrl}}"],
                  "path": ["courses"]
                }
              }
            },
            {
              "name": "4. Activate Course",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"active\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/courses/{{course_id}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["courses", "{{course_id}}"]
                }
              }
            }
          ]
        },
        {
          "name": "Complete Activity Tracking Workflow",
          "item": [
            {
              "name": "1. Login as Facilitator",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john.doe@university.edu\",\n  \"password\": \"SecurePass123!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                }
              }
            },
            {
              "name": "2. View My Courses",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/courses/my-courses",
                  "host": ["{{baseUrl}}"],
                  "path": ["courses", "my-courses"]
                }
              }
            },
            {
              "name": "3. Create Week 1 Activity",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"allocationId\": \"{{course_id}}\",\n  \"weekNumber\": 1,\n  \"attendance\": [true, true, true, false, true],\n  \"formativeOneGrading\": \"Pending\",\n  \"formativeTwoGrading\": \"Not Started\",\n  \"summativeGrading\": \"Not Started\",\n  \"courseModeration\": \"Not Started\",\n  \"intranetSync\": \"Not Started\",\n  \"gradeBookStatus\": \"Not Started\",\n  \"notes\": \"Week 1 initial submission\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/activities",
                  "host": ["{{baseUrl}}"],
                  "path": ["activities"]
                }
              }
            },
            {
              "name": "4. Update Activity Progress",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"formativeOneGrading\": \"Done\",\n  \"formativeTwoGrading\": \"Done\",\n  \"courseModeration\": \"Done\",\n  \"notes\": \"Week 1 partially completed\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/activities/{{activity_id}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["activities", "{{activity_id}}"]
                }
              }
            },
            {
              "name": "5. Complete All Tasks",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"summativeGrading\": \"Done\",\n  \"intranetSync\": \"Done\",\n  \"gradeBookStatus\": \"Done\",\n  \"notes\": \"Week 1 fully completed\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/activities/{{activity_id}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["activities", "{{activity_id}}"]
                }
              }
            }
          ]
        }
      ]
    }
  ]
}